version: 2.1

jobs:
  test:
    macos:
      xcode: 13.4
    steps:
      - run: |
          sudo systemsetup -gettimezone
          sudo systemsetup -settimezone Asia/Tokyo

      - run: sudo systemsetup -gettimezone

  test2:
    macos:
      xcode: 13.4
    steps:
      - run:
          name: "go インストール"
          command: |
            brew install go
            #DEBUG
            ls -la /Users/distiller/go
            go version
            #DEBUG

      - run:
          name: "GOPATH の設定"
          command: |
            mkdir $HOME/go
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            #DEBUG
            export
            #DEBUG

  build:
    macos:
      xcode: 13.4
    steps:
      # TimeZoneを設定する
      - run: sudo systemsetup -settimezone Asia/Tokyo

##      - run: sw_vers # OS Version 2022/6/3現在 12.3.1
##      - run: xcodebuild -version # Xcode Version 2022/6/3現在 13.4

      # Command Line Toolsのインストール
      # VMではこのToolが入っていないため openssl の確認でエラーとなっていたが、Excutorではエラーにならない（入ってる？）のでコメントアウト
      # - run: |
      #     # curl https://download.developer.apple.com/Developer_Tools/Command_Line_Tools_for_Xcode_13.4/Command_Line_Tools_for_Xcode_13.4.dmg -o $HOME/Downloads/Command_Line_Tools_for_Xcode_13.4.dmg
      #     # #Start DEBUG
      #     # #ls -la $HOME/Downloads
      #     # #End DEBUG
      #     # cd $HOME/Downloads
      #     # #sudo installer -pkg Command_Line_Tools_for_Xcode_13.4.dmg -target /

      # opensslのインストール
      - run:
          name: "openssl 1.1.1n のダウンロード"
          command: curl https://www.openssl.org/source/old/1.1.1/openssl-1.1.1n.tar.gz -o $HOME/Downloads/openssl-1.1.1n.tar.gz

      - run:
          name: "openssl 1.1.1n の展開～make～インストール"
          command: |
            sudo mkdir -p /usr/local/src
            cd /usr/local/src
            sudo cp -r $HOME/Downloads/openssl-1.1.1n.tar.gz .
            sudo tar xzvf openssl-1.1.1n.tar.gz

      - run:
          name: "arm64ビルド用に設定変更"
          command: |
            cd /usr/local/src
            sudo cp -r openssl-1.1.1n openssl-1.1.1n-arm64
            cd openssl-1.1.1n-arm64/Configurations
            #Start DEBUG
            #pwd
            #End DEBUG
            sudo sed -i '' -e "s/-arch arm64/-arch arm64 -mmacosx-version-min=11.0 -isysroot \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX.sdk/g" 10-main.conf
            sudo sed -i '' -e "s/ios64/macosx/g" 10-main.conf

#Start DEBUG 10-main.confをartifactsに保存する
##      - run: |
##            ls -la /usr/local/src/openssl-1.1.1n-arm64/Configurations
##      - store_artifacts:
##          path: /usr/local/src/openssl-1.1.1n-arm64/Configurations/10-main.conf
#End DEBUG

      - run:
          name: "make"
          command: |
            cd /usr/local/src/openssl-1.1.1n-arm64
            sudo ./Configure shared enable-rc5 zlib darwin64-arm64-cc no-asm
            sudo make
            sudo make install

      - run:
          name: "x86_64ビルド用に設定変更"
          command: |
            cd /usr/local/src
            sudo cp -r openssl-1.1.1n openssl-1.1.1n-x86_64

      - run:
          name: "make"
          command: |
            cd /usr/local/src/openssl-1.1.1n-x86_64
            sudo ./Configure darwin64-x86_64-cc shared
            sudo make
            sudo make install

      - run:
          name: "ユニバーサルライブラリ作成"
          command: |
            cd /usr/local/src
            sudo mkdir -p openssl-mac
            sudo lipo -create openssl-1.1.1n-arm64/libcrypto.1.1.dylib openssl-1.1.1n-x86_64/libcrypto.1.1.dylib -output openssl-mac/libcrypto.1.1.dylib
            sudo lipo -create openssl-1.1.1n-arm64/libcrypto.a openssl-1.1.1n-x86_64/libcrypto.a -output openssl-mac/libcrypto.a
            sudo lipo -create openssl-1.1.1n-arm64/libssl.1.1.dylib openssl-1.1.1n-x86_64/libssl.1.1.dylib -output openssl-mac/libssl.1.1.dylib
            sudo lipo -create openssl-1.1.1n-arm64/libssl.a openssl-1.1.1n-x86_64/libssl.a -output openssl-mac/libssl.a
            # Start DEBUG
            cd openssl-mac
            lipo -info libcrypto.1.1.dylib
            lipo -info libcrypto.a
            lipo -info libssl.1.1.dylib
            lipo -info libssl.a
            # End DEBUG

      - run:
          name: "ライブラリコピー"
          command: |
            sudo mkdir -p /usr/local/lib
            cd /usr/local/src/openssl-mac
            sudo cp lib* /usr/local/lib

#Start DEBUG
      - run:
          name: "確認"
          command: openssl version
#End DEBUG

# Go言語のインストール
##      - run: curl https://go.dev/dl/go1.18.3.darwin-arm64.pkg -o darwin-arm64.pkg
##      - run: ls -la
##      - run: sudo installer -pkg ./darwin-arm64.pkg -target /

##      - run: brew install go@1.17
##      - run: export PATH="/usr/local/opt/go@1.17/bin:$PATH"
##      - run: go version # GO 2022/6/6現在 1.18.3 darwin/amd64

      - run:
          name: "go インストール"
          command: |
            brew install go
            #DEBUG
            export
            go version
            #DEBUG

      - run:
          name: "GOPATH の設定"
          command: |
            mkdir $HOME/go
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            #DEBUG
            export
            #DEBUG

# ソースコードの取得
#      - checkout

workflows:
  job-workflow:
    jobs:
      - test2
